<?php
// These stubs were generated by the phan stub generator.
// @phan-stub-for-extension excimer@1.1.1

namespace {
class ExcimerLog implements \Iterator, \Traversable, \Countable, \ArrayAccess {

    // methods
    private function __construct() {}
    public function formatCollapsed() {}
    public function getSpeedscopeData() {}
    public function aggregateByFunction() : array {}
    public function getEventCount() {}
    public function current() : mixed {}
    public function key() : mixed {}
    public function next() : void {}
    public function rewind() : void {}
    public function valid() : bool {}
    public function count() : int {}
    public function offsetExists($offset) : bool {}
    public function offsetGet($offset) : mixed {}
    public function offsetSet($offset, $value) : void {}
    public function offsetUnset($offset) : void {}
}

class ExcimerLogEntry {

    // methods
    private function __construct() {}
    public function getTimestamp() {}
    public function getEventCount() {}
    public function getTrace() {}
}

class ExcimerProfiler {

    // methods
    public function setPeriod($period) {}
    public function setEventType($event_type) {}
    public function setMaxDepth($max_depth) {}
    public function setFlushCallback($callback, $max_samples) {}
    public function clearFlushCallback() {}
    public function start() {}
    public function stop() {}
    public function getLog() : \ExcimerLog {}
    public function flush() {}
}

class ExcimerTimer {

    // methods
    public function setEventType($event_type) {}
    public function setInterval($interval) {}
    public function setPeriod($period) {}
    public function setCallback($callback) {}
    public function start() {}
    public function stop() {}
    public function getTime() {}
}

function excimer_set_timeout($callback, $interval) {}
const EXCIMER_CPU = 1;
const EXCIMER_REAL = 0;
}
